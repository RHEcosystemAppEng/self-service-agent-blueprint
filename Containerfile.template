# Unified Containerfile for self-service-agent
# Supports three execution modes:
# 1. Database migration: python shared-db/scripts/migrate.py
# 2. Asset registration: python -m asset_manager.script.register_assets  
# 3. Main service: ./entrypoint.sh (or custom command)

# ---------- Build Stage ----------
FROM registry.access.redhat.com/ubi9/python-312:latest as builder

USER root
RUN dnf update -y && dnf clean all
RUN pip3 install --no-cache-dir uv
WORKDIR /app

# Copy all dependency files first for better caching
COPY pyproject.toml uv.lock README.md ./
COPY asset-manager/pyproject.toml asset-manager/README.md ./asset-manager/
COPY shared-clients/pyproject.toml shared-clients/README.md ./shared-clients/
COPY shared-db/pyproject.toml ./shared-db/

# Copy test directory (needed for root package build)
COPY test/ ./test

# Install dependencies
RUN uv sync --frozen --no-cache

# Copy all remaining source code
COPY asset-manager/ ./asset-manager
COPY shared-clients/ ./shared-clients
COPY shared-db/ ./shared-db
COPY scripts/ ./scripts

# ---------- Production Stage ----------
FROM registry.access.redhat.com/ubi9/python-312-minimal:latest

WORKDIR /app

# Copy virtual environment and all necessary files
COPY --from=builder /app/.venv /app/.venv
COPY --from=builder /app/asset-manager /app/asset-manager
COPY --from=builder /app/shared-clients /app/shared-clients
COPY --from=builder /app/shared-db /app/shared-db
COPY --from=builder /app/scripts /app/scripts
COPY --from=builder /app/test /app/test

# Set up environment
ENV PATH="/app/.venv/bin:$PATH"
ENV PYTHONPATH="/app/asset-manager/src:/app/shared-clients/src:/app/shared-db/src:$PYTHONPATH"

# Drop privileges
USER 1001

# Expose port for main service
EXPOSE 8080

# Default command (can be overridden in deployment)
# This runs the main service spinning loop
CMD ["./scripts/containers/entrypoint.sh"]
