name: Build and push images (manual)

on:
  workflow_dispatch:
    inputs:
      github_username:
        description: 'GitHub username/organization'
        required: false
        default: 'RHEcosystemAppEng'
        type: string
      target_branch:
        description: 'Target branch for building'
        required: false
        default: 'main'
        type: string
      version:
        description: 'Version to use for tagging'
        required: true
        default: ''
        type: string

env:
  REGISTRY: quay.io/ecosystem-appeng

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Determine repository and branch to checkout
        id: checkout_info
        run: |
          REPO="${{ github.event.inputs.github_username }}/self-service-agent-blueprint"
          CHECKOUT_REF="${{ github.event.inputs.target_branch }}"
          echo "repository=${REPO}" >> $GITHUB_OUTPUT
          echo "checkout_ref=${CHECKOUT_REF}" >> $GITHUB_OUTPUT
          echo "Will checkout repository: ${REPO}"
          echo "Will checkout ref: ${CHECKOUT_REF}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.checkout_info.outputs.repository }}
          ref: ${{ steps.checkout_info.outputs.checkout_ref }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.6.17"
          python-version: "3.12"

      - name: Build all Images
        run: |
          echo "Building images with version: ${{ github.event.inputs.version }}"
          echo "Using registry: ${{ env.REGISTRY }}"
          VERSION="${{ github.event.inputs.version }}" make build-all-images

      - name: Push all Images
        run: |
          echo "Pushing images with version: ${{ github.event.inputs.version }}"
          echo "Using registry: ${{ env.REGISTRY }}"
          VERSION="${{ github.event.inputs.version }}" make push-all-images
